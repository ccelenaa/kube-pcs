apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/frontend-entry-points: https,http
    traefik.ingress.kubernetes.io/redirect-entry-point: https
    traefik.ingress.kubernetes.io/redirect-permanent: "true"
    traefik.ingress.kubernetes.io/router.priority: "1"
  name: ingress-api-stripe
spec:
  ingressClassName: traefik
  tls:
  - hosts:
    - "*.pcs.fr"
    secretName: sectlsu
  rules:
  - host: "*.pcs.fr"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-stripe
            port:
              number: 80


# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: my-ingress
#   annotations:
#     kubernetes.io/ingress.class: nginx
# spec:
#   tls:
#   - hosts:
#     - example.com
#   secretName: example-tls-cert
  
#   rules:
#   - host: example.com
#     http:
#       paths:
#         - path: /
#           pathType: Exact
#           backend:
#             service:
#               name: backend-service
#               port:
#                 number: 80


# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: api-pcs
#   annotations:
#     alb.ingress.kubernetes.io/target-type: ip
#     kubernetes.io/ingress.class: alb
#     alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80,"HTTPS": 443}]'
#     alb.ingress.kubernetes.io/actions.redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
#     alb.ingress.kubernetes.io/success-codes: 200-302
#     alb.ingress.kubernetes.io/healthcheck-path: /readiness
#     alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
#     PrivateDNSName: pcs-api-pcs
# spec:
#   rules:
#   - host: "pcs.fr"
#     http:
#       paths:
#       - path: /*
#         pathType: Prefix
#         backend:
#           service:
#             name: api-pcs
#             port:
#               number: 80
